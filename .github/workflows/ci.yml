name: CI
on: [push, pull_request]
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt', 'pyproject.toml') }}
          restore-keys: ${{ runner.os }}-pip-
      - run: pip install -U pip
      - run: pip install "pydantic[email]" pytest pytest-cov bandit mypy
      - run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Guard against legacy mentor_phase1 imports
        run: |
          git grep -n "mentor_phase1" -- src tests || true
          test -z "$(git grep -n "mentor_phase1" -- src tests)"

      - name: Gate coverage (mentor module)
        run: |
          pytest -q -o addopts="" \
            --cov=src.core.models.mentor \
            --cov-report=term-missing \
            --cov-fail-under=90

      - name: Run full package coverage (artifacts)
        run: |
          mkdir -p reports
          pytest -q -o addopts="" \
            --cov=src.core.models \
            --cov-report=term-missing \
            --cov-report=xml:reports/coverage.xml \
            --junitxml=reports/junit.xml

      - name: Counter service schema checks
        run: make ci-checks

      - name: Counter fault-injection suite
        run: make fault-tests

      - name: Upload test reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: reports/

      - name: Static analysis (Bandit + mypy)
        run: make static-checks
